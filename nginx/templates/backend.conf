server {
    if ($allowed = 0) {
        return 403;
    }
    listen {{ .Env.BACKEND_PORT }} ssl;
    http2 on;
    server_name {{ .Env.HOSTNAME }};
    # Redirect HTTP to HTTPS when accessing HTTPS port
    error_page 497 =301 https://$host:$server_port$request_uri;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Increase WebSocket timeout settings
    proxy_connect_timeout 75s;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Increase proxy headers hash size
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;

    # HSTS (Recommended to enable if only using HTTPS)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Reverse proxy configuration
    location / {
        proxy_pass http://backend:5000;

        # Add these three lines for WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Set real IP
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Enable request headers and body passing
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
    }
}