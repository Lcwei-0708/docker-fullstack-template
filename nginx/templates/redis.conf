server {
    if ($allowed = 0) {
        return 403;
    }
    {{ if eq .Env.SSL_ENABLE "true" }}
    listen {{ .Env.REDIS_INSIGHT_PORT }} ssl;
    http2 on;
    {{ else }}
    listen {{ .Env.REDIS_INSIGHT_PORT }};
    {{ end }}
    server_name {{ .Env.HOSTNAME }};
    
    {{ if eq .Env.SSL_ENABLE "true" }}
    # Redirect HTTP to HTTPS when accessing HTTPS port
    error_page 497 =301 https://$host:$server_port$request_uri;

    ssl_certificate /etc/nginx/ssl/{{ .Env.SSL_CERT_FILE }};
    ssl_certificate_key /etc/nginx/ssl/{{ .Env.SSL_KEY_FILE }};

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS - Only enable when SSL is enabled
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    {{ end }}

    # Basic Authentication for Redis Insight (only if credentials are provided)
    {{ if and .Env.REDIS_INSIGHT_USER .Env.REDIS_INSIGHT_PASSWORD }}
    auth_basic "Redis Insight Access";
    auth_basic_user_file /etc/nginx/.htpasswd;
    
    # Additional security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    {{ end }}

    # Redis Insight Web UI
    location / {
        proxy_pass http://redis:8001;

        # Set real IP
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Enable request headers and body passing
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
    }
}
